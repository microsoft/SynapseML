"use strict";(self.webpackChunksynapseml=self.webpackChunksynapseml||[]).push([[39285],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>d});var n=o(67294);function l(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){l(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,l=function(e,t){if(null==e)return{};var o,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(l[o]=e[o]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(l[o]=e[o])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(o),d=l,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return o?n.createElement(g,r(r({ref:t},c),{},{components:o})):n.createElement(g,r({ref:t},c))}));function d(e,t){var o=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=o.length,r=new Array(a);r[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var p=2;p<a;p++)r[p]=o[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},64976:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=o(83117),l=(o(67294),o(3905));const a={title:"Autologging",sidebar_label:"Autologging",description:"SynapseML autologging"},r=void 0,i={unversionedId:"Use with MLFlow/Autologging",id:"version-1.0.8/Use with MLFlow/Autologging",title:"Autologging",description:"SynapseML autologging",source:"@site/versioned_docs/version-1.0.8/Use with MLFlow/Autologging.md",sourceDirName:"Use with MLFlow",slug:"/Use with MLFlow/Autologging",permalink:"/SynapseML/docs/1.0.8/Use with MLFlow/Autologging",draft:!1,tags:[],version:"1.0.8",frontMatter:{title:"Autologging",sidebar_label:"Autologging",description:"SynapseML autologging"},sidebar:"docs",previous:{title:"Install",permalink:"/SynapseML/docs/1.0.8/Use with MLFlow/Install"},next:{title:"About",permalink:"/SynapseML/docs/1.0.8/Deploy Models/Overview"}},s={},p=[{value:"Automatic Logging",id:"automatic-logging",level:2},{value:"Configuration process in Databricks as an example",id:"configuration-process-in-databricks-as-an-example",level:2},{value:"Example for ConditionalKNNModel",id:"example-for-conditionalknnmodel",level:2}],c={toc:p};function u(e){let{components:t,...o}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"automatic-logging"},"Automatic Logging"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.mlflow.org/docs/latest/tracking.html#automatic-logging"},"MLflow automatic logging")," allows you to log metrics, parameters, and models without the need for explicit log statements.\nSynapseML supports autologging for every model in the library."),(0,l.kt)("p",null,"To enable autologging for SynapseML:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Download this customized ",(0,l.kt)("a",{parentName:"li",href:"https://mmlspark.blob.core.windows.net/publicwasb/log_model_allowlist.txt"},"log_model_allowlist file")," and put it at a place that your code has access to.\nFor example:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In Synapse ",(0,l.kt)("inlineCode",{parentName:"li"},"wasb://<containername>@<accountname>.blob.core.windows.net/PATH_TO_YOUR/log_model_allowlist.txt")),(0,l.kt)("li",{parentName:"ul"},"In Databricks ",(0,l.kt)("inlineCode",{parentName:"li"},"/dbfs/FileStore/PATH_TO_YOUR/log_model_allowlist.txt"),".")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Set spark configuration ",(0,l.kt)("inlineCode",{parentName:"li"},"spark.mlflow.pysparkml.autolog.logModelAllowlistFile")," to the path of your ",(0,l.kt)("inlineCode",{parentName:"li"},"log_model_allowlist.txt")," file."),(0,l.kt)("li",{parentName:"ol"},"Call ",(0,l.kt)("inlineCode",{parentName:"li"},"mlflow.pyspark.ml.autolog()")," before your training code to enable autologging for all supported models.")),(0,l.kt)("p",null,"Note:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"If you want to support autologging of PySpark models not present in the log_model_allowlist file, you can add such models to the file."),(0,l.kt)("li",{parentName:"ol"},"If you've enabled autologging, then don't write explicit ",(0,l.kt)("inlineCode",{parentName:"li"},"with mlflow.start_run()")," as it might cause multiple runs for one single model or one run for multiple models.")),(0,l.kt)("h2",{id:"configuration-process-in-databricks-as-an-example"},"Configuration process in Databricks as an example"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Install latest MLflow via ",(0,l.kt)("inlineCode",{parentName:"li"},"%pip install mlflow")),(0,l.kt)("li",{parentName:"ol"},"Upload your customized ",(0,l.kt)("inlineCode",{parentName:"li"},"log_model_allowlist.txt")," file to dbfs by clicking File/Upload Data button on Databricks UI."),(0,l.kt)("li",{parentName:"ol"},"Set Cluster Spark configuration following ",(0,l.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/azure/databricks/clusters/configure#spark-configuration"},"this documentation"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"spark.mlflow.pysparkml.autolog.logModelAllowlistFile /dbfs/FileStore/PATH_TO_YOUR/log_model_allowlist.txt\n")),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"Run the following line before your training code executes.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"mlflow.pyspark.ml.autolog()\n")),(0,l.kt)("p",null,"You can customize how autologging works by supplying appropriate ",(0,l.kt)("a",{parentName:"p",href:"https://www.mlflow.org/docs/latest/python_api/mlflow.pyspark.ml.html#mlflow.pyspark.ml.autolog"},"parameters"),"."),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},"To find your experiment's results via the ",(0,l.kt)("inlineCode",{parentName:"li"},"Experiments")," tab of the MLFlow UI.",(0,l.kt)("img",{src:"https://mmlspark.blob.core.windows.net/graphics/adb_experiments.png",width:"1200"}))),(0,l.kt)("h2",{id:"example-for-conditionalknnmodel"},"Example for ConditionalKNNModel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from pyspark.ml.linalg import Vectors\nfrom synapse.ml.nn import *\n\ndf = spark.createDataFrame([\n    (Vectors.dense(2.0,2.0,2.0), "foo", 1),\n    (Vectors.dense(2.0,2.0,4.0), "foo", 3),\n    (Vectors.dense(2.0,2.0,6.0), "foo", 4),\n    (Vectors.dense(2.0,2.0,8.0), "foo", 3),\n    (Vectors.dense(2.0,2.0,10.0), "foo", 1),\n    (Vectors.dense(2.0,2.0,12.0), "foo", 2),\n    (Vectors.dense(2.0,2.0,14.0), "foo", 0),\n    (Vectors.dense(2.0,2.0,16.0), "foo", 1),\n    (Vectors.dense(2.0,2.0,18.0), "foo", 3),\n    (Vectors.dense(2.0,2.0,20.0), "foo", 0),\n    (Vectors.dense(2.0,4.0,2.0), "foo", 2),\n    (Vectors.dense(2.0,4.0,4.0), "foo", 4),\n    (Vectors.dense(2.0,4.0,6.0), "foo", 2),\n    (Vectors.dense(2.0,4.0,8.0), "foo", 2),\n    (Vectors.dense(2.0,4.0,10.0), "foo", 4),\n    (Vectors.dense(2.0,4.0,12.0), "foo", 3),\n    (Vectors.dense(2.0,4.0,14.0), "foo", 2),\n    (Vectors.dense(2.0,4.0,16.0), "foo", 1),\n    (Vectors.dense(2.0,4.0,18.0), "foo", 4),\n    (Vectors.dense(2.0,4.0,20.0), "foo", 4)\n], ["features","values","labels"])\n\ncnn = (ConditionalKNN().setOutputCol("prediction"))\ncnnm = cnn.fit(df)\n\ntest_df = spark.createDataFrame([\n    (Vectors.dense(2.0,2.0,2.0), "foo", 1, [0, 1]),\n    (Vectors.dense(2.0,2.0,4.0), "foo", 4, [0, 1]),\n    (Vectors.dense(2.0,2.0,6.0), "foo", 2, [0, 1]),\n    (Vectors.dense(2.0,2.0,8.0), "foo", 4, [0, 1]),\n    (Vectors.dense(2.0,2.0,10.0), "foo", 4, [0, 1])\n], ["features","values","labels","conditioner"])\n\ndisplay(cnnm.transform(test_df))\n')),(0,l.kt)("p",null,"This code should log one run with a ConditionalKNNModel artifact and its parameters."),(0,l.kt)("img",{src:"https://mmlspark.blob.core.windows.net/graphics/autologgingRunSample.png",width:"1200"}))}u.isMDXComponent=!0}}]);