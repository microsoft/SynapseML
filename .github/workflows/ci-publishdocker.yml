name: CI/Publish Docker

on:
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]
  workflow_dispatch:

jobs:
  PublishDocker:
    runs-on: ubuntu-18.04
    timeout-minutes: 0
    strategy:
      fail-fast: false
      matrix:
        image:
          - repository-folder: "build-demo"
            source-folder: "demo"
          - repository-folder: "build-minimal"
            source-folder: "minimal"
          - repository-folder: "release"
            source-folder: "demo"
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 0
    - uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Azure Container Registry Login
      shell: bash -l {0}
      run: az acr login --name mmlsparkmcr
    # - uses: Azure/get-keyvault-secrets@v1
    #   with:
    #     keyvault: "mmlspark-keys"
    #     secrets: 'acrhost'  # comma separated list of secret keys that need to be fetched from the Key Vault 
    #   id: GetKeyVaultSecrets
    # - name: Run command
    #   shell: bash -l {0}
    #   run: sbt "core/version" | tail -2 | cut -d' ' -f2 | sed 's/\x1b\[[0-9;]*m//g' | head -n 1
    - name: Get Docker Tag and Version
      id: getDockerTagAndVersion
      shell: bash -l {0}
      run: |
        echo '::set-output name=version::'$(sbt "core/version" | tail -2 | cut -d' ' -f2 | sed 's/\x1b\[[0-9;]*m//g' | head -n 1)
        echo '::set-output name=gittag::'$(git tag -l --points-at HEAD)
    - name: Image Build - ${{ matrix.image.repository-folder }}
      if: matrix.image.repository-folder != "release"
      shell: bash -l {0}
      run: docker build -f tools/docker/${{ matrix.image.source-folder }}/Dockerfile --build-arg MMLSPARK_VERSION=${{ steps.getDockerTagAndVersion.outputs.version }} -t mmlsparkmcr.azurecr.io/public/mmlspark/${{ matrix.image.repository-folder }}:${{ steps.getDockerTagAndVersion.outputs.version }} .
    - name: Image Build - ${{ repository-folder }}
      if: matrix.image.repository-folder == "release"
      shell: bash -l {0}
      run: docker build -f tools/docker/${{ matrix.image.source-folder }}/Dockerfile --build-arg MMLSPARK_VERSION=${{ steps.getDockerTagAndVersion.outputs.version }} -t mmlsparkmcr.azurecr.io/public/mmlspark/${{ matrix.image.repository-folder }}:${{ steps.getDockerTagAndVersion.outputs.version }} -t mmlsparkmcr.azurecr.io/public/mmlspark/release:latest .
    - name: Image Push - ${{ repository-folder }}
      shell: bash -l {0}
      run: docker push mmlsparkmcr.azurecr.io/public/mmlspark/${{ matrix.image.repository-folder }}
